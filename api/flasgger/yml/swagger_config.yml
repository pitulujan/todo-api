openapi: 3.0.2
info:
  description: "Playing Around API"
  version: "0.1"
  title: "Nonsense API"
  contact : 
    responsibleOrganization: Martin Lujan
    responsibleDeveloper: Martin Lujan
    email: lujanmartin91@gmail.com
    
consumes: "application/x-www-form-urlencoded"
produces: "application/json"
  

components:
  securitySchemes:
    basicAuth:     
      type: http
      scheme: basic
  
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    New_Task:
      title: New Task
      type: object
      properties:
        done:
          type: boolean
          description: State of the task
        description:
          type: string
          description: Description of the task
        title:
          type: string
          description: Title of the task
      required:
        - done
        - title
        - description

    Update_Task:
      title: Update Task
      type: object
      properties:
        id:
          type: integer
          description: Id of the task 
        done:
          type: boolean
          description: State of the task 
        description:
          type: string
          description: Description of the task
        title:
          type: string
          description: Title of the task
      required:
        - id
        - done
      optional:
        - description
        - title

    Delete_Task:
      title: Delete Task
      type : object
      properties:
        id:
          type: integer
          description: Id of the task
      required:
        - id 

  examples:   # Sample object
    new_task:
      value:
        done: false
        title: Supermarket
        description: Get milk

    update_task:
      value:
        id: 10
        done: false
        title: Supermarket
        description: Get milk

    delete_task:
      value:
        id: 10


paths:
  /todo/api/v0.1/tasks/token:
    get:
      summary: Get JWT for authentication
      tags:
      - Token
      security:
        - basicAuth: []
      responses:
        200:
          description: OK (successfully authenticated)
  
  /todo/api/v0.1/tasks:
    get:
      summary: Get a list of all the tasks
      tags:
        - Tasks
      security:
        - Bearer: []
      responses:
        200:
          description: OK (successfully authenticated)
    post:
      summary: Add a new task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/New_Task'
            examples:
              New Task:
                $ref: '#/components/examples/new_task'
      security:
        - Bearer: []
      responses:
        200:
          description: OK (successfully authenticated)
    put:
      summary: Update a task 
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_Task'
            examples:
              Update Task:
                $ref: '#/components/examples/update_task'
      security:
        - Bearer: []
      responses:
        200:
          description: OK (successfully authenticated)
    delete:
      summary: Delete a task by ID
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delete_Task'
            examples:
              Delete Task:
                $ref: '#/components/examples/delete_task'
      security:
        - Bearer: []
      responses:
        200:
          description: OK (successfully authenticated)

  /todo/api/v.1/tasks/{id}:
    get:
      summary: Get a task by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the task to get
      tags:
        - Tasks
      security:
        - Bearer: []
      responses:
        200:
          description: OK (successfully authenticated)


